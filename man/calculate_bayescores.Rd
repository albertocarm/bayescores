% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayescores.R
\name{calculate_bayescores}
\alias{calculate_bayescores}
\title{Calculate Bayesian scores for clinical benefit (BSCB)}
\usage{
calculate_bayescores(
  tr_posterior_samples,
  cure_posterior_samples,
  tr_mean = 1.25,
  tr_max = 1.5,
  cure_mean = 0.065,
  cure_max = 0.13,
  tr_weight = 0.8
)
}
\arguments{
\item{tr_posterior_samples}{Numeric vector of MCMC samples for the Time Ratio.}

\item{cure_posterior_samples}{Numeric vector of MCMC samples for the cure rate difference.}

\item{tr_mean}{TR value mapping to utility 50. Default 1.25.}

\item{tr_max}{TR value mapping to utility ≈99. Default 1.50.}

\item{cure_mean}{Cure rate difference mapping to utility 50. Default 0.065.}

\item{cure_max}{Cure rate difference mapping to utility ≈99. Default 0.13.}

\item{tr_weight}{Weight (in [0,1]) of the TR score in the composite. Default 0.8.}
}
\value{
A list with components:
\describe{
  \item{tr_scores}{Numeric vector of TR utility scores (0–100).}
  \item{cure_scores}{Numeric vector of cure rate difference utility scores (0–100).}
  \item{final_scores}{Numeric vector of weighted composite scores (0–100).}
}
}
\description{
Transforms posterior MCMC samples of the Time Ratio (TR) and the cure rate
difference into utility score distributions (0–100) and a weighted composite
score.
}
\details{
Scaling uses the Normal CDF:
\deqn{\text{TR\_score} = 100\,\Phi\!\left(\frac{t - \mu_{TR}}{\sigma_{TR}}\right), \qquad
\sigma_{TR} = \frac{\text{tr\_max}-\text{tr\_mean}}{z_{0.99}},\ z_{0.99}=\Phi^{-1}(0.99)}
and analogously for the cure rate difference. Thus `tr_mean` (or `cure_mean`)
maps to ≈50 and `tr_max` (or `cure_max`) to ≈99.
}
\examples{
\dontrun{
# Assume `bayesian_fit` is an object returned by your model fitting function,
# and the extractor helpers return numeric vectors of posterior samples:

example_tr_mcmc   <- extract_mcmc_time_ratios(bayesian_fit)
example_cure_mcmc <- extract_mcmc_cure_diffs(bayesian_fit)

scores <- calculate_bayescores(example_tr_mcmc, example_cure_mcmc)
summary(scores$final_scores)
}

# (Optional) Self‑contained illustration (remove if you prefer only the real-workflow example):
# set.seed(123)
# tr_sim   <- rnorm(2000, mean = 1.30, sd = 0.08)
# cure_sim <- rnorm(2000, mean = 0.07,  sd = 0.02)
# simulate_scores <- calculate_bayescores(tr_sim, cure_sim)
# summary(simulate_scores$final_scores)

}
